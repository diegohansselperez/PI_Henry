{"ast":null,"code":"import { GET_VIDEOGAMES, GET_GAME_BY_NAME, TO_HOME_PAGE, GET_GENRES, POST_CREATE_GAME } from \"../type/types\";\nconst initialState = {\n  allVideogames: [],\n  allGamesOrigin: [],\n  allGenres: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      return {\n        ...state,\n        allVideogames: action.payload,\n        allGamesOrigin: action.payload\n      };\n    case GET_GAME_BY_NAME:\n      //const getGameByName = state.allVideogames.filter( game => game.nombre.toLowerCase() === action.payload.toLowerCase())\n      return {\n        ...state,\n        allVideogames: action.payload\n      };\n    case POST_CREATE_GAME:\n      return {\n        ...state,\n        allVideogames: [...action.payload, ...state.allVideogames]\n      };\n    case TO_HOME_PAGE:\n      return {\n        ...state,\n        allVideogames: []\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["GET_VIDEOGAMES","GET_GAME_BY_NAME","TO_HOME_PAGE","GET_GENRES","POST_CREATE_GAME","initialState","allVideogames","allGamesOrigin","allGenres","reducer","state","arguments","length","undefined","action","type","payload"],"sources":["/home/diego/Escritorio/PI_Henry/client/src/redux/reducer/reducer.js"],"sourcesContent":["import { GET_VIDEOGAMES, GET_GAME_BY_NAME, TO_HOME_PAGE, GET_GENRES, POST_CREATE_GAME } from \"../type/types\";\n\nconst initialState = {\n  allVideogames: [],\n  allGamesOrigin: [],\n  allGenres: []\n};\n\nconst reducer = (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      return {\n        ...state,\n        allVideogames: action.payload,\n        allGamesOrigin: action.payload,\n      };\n      case GET_GAME_BY_NAME:\n        //const getGameByName = state.allVideogames.filter( game => game.nombre.toLowerCase() === action.payload.toLowerCase())\n      return {\n        ...state,\n        allVideogames: action.payload\n      }\n\n      case POST_CREATE_GAME: \n      return {\n        ...state,\n        allVideogames: [...action.payload, ...state.allVideogames]\n      }\n\n      case TO_HOME_PAGE : \n      return {\n        ...state,\n        allVideogames: []\n      }\n\n      case GET_GENRES:\n        return{\n          ...state,\n          allGenres: action.payload\n        }\n      default: \n      return state ;\n  }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AAE5G,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,EAAE;EACjBC,cAAc,EAAE,EAAE;EAClBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C;EACA,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKf,cAAc;MACjB,OAAO;QACL,GAAGU,KAAK;QACRJ,aAAa,EAAEQ,MAAM,CAACE,OAAO;QAC7BT,cAAc,EAAEO,MAAM,CAACE;MACzB,CAAC;IACD,KAAKf,gBAAgB;MACnB;MACF,OAAO;QACL,GAAGS,KAAK;QACRJ,aAAa,EAAEQ,MAAM,CAACE;MACxB,CAAC;IAED,KAAKZ,gBAAgB;MACrB,OAAO;QACL,GAAGM,KAAK;QACRJ,aAAa,EAAE,CAAC,GAAGQ,MAAM,CAACE,OAAO,EAAE,GAAGN,KAAK,CAACJ,aAAa;MAC3D,CAAC;IAED,KAAKJ,YAAY;MACjB,OAAO;QACL,GAAGQ,KAAK;QACRJ,aAAa,EAAE;MACjB,CAAC;IAED,KAAKH,UAAU;MACb,OAAM;QACJ,GAAGO,KAAK;QACRF,SAAS,EAAEM,MAAM,CAACE;MACpB,CAAC;IACH;MACA,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}